<!DOCTYPE html>
<html>
  <head>
    <!--
      Propeller ads
    -->
    <?php echo include_once (dirname(__FILE__) . '/__AntiAdBlock.php'); ?>
    <meta name="propeller" content="0b0ac7cf500bac7b710241b83097ec94">
    <title><%=typeof title == 'undefined' ? 'New Sails App' : title%></title>
    <!--
      End of propeller Ads
    -->

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    


    <!--
        Stylesheets and Preprocessors
        ==============================  

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/animate.css">
    <link rel="stylesheet" href="/styles/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/c3.min.css">
    <link rel="stylesheet" href="/styles/custom.css">
    <link rel="stylesheet" href="/styles/datatables.min.css">
    <link rel="stylesheet" href="/styles/font-awesome.css">
    <link rel="stylesheet" href="/styles/font-awesome.min.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/style.css">
    <!--STYLES END-->
	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js"></script>
  </head>

  <body>
	<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
	<script>

	(adsbygoogle = window.adsbygoogle || []).push({

	google_ad_client: "ca-pub-7718496085786372",

	enable_page_level_ads: true

	});

	</script>
    <%- body %>
	
	
    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->
    <!--SCRIPTS Media-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/c3.min.js"></script>
    <script src="/js/custom.js"></script>
    <script src="/js/d3.min.js"></script>
    <script src="/js/datatables.min.js"></script>
    <script src="/js/easing.min.js"></script>
    <script src="/js/hoverIntent.js"></script>
    <script src="/js/jquery.marquee.js"></script>
    <script src="/js/jquery.sparkline.min.js"></script>
    <script src="/js/superfish.min.js"></script>
    <script src="/js/wow.min.js"></script>
    <!--SCRIPTS END-->
    <!--SCRIPTS Propeller-->
    <script type="text/javascript" src="//go.oclaserver.com/apu.php?zoneid=1616040"></script>
    <!--SCRIPTS END-->
  </body>
</html>
